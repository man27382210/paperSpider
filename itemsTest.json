{"defpaper": [{"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=286877", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "The Google file system"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=6338", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Efficient dispersal of information for security, load balancing, and fault tolerance"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=9096", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Cluster-based scalable network services"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=465694", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Distributed Computing in Practice: The Condor Experience. Concurrency and Computation : Practice and Experience 17"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=206811", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Parallel Prefix Computation"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=159619", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Scans as Primitive Parallel Operations"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=48405", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Charlotte: Metacomputing on the Web"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=4748061", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Map-reduce for machine learning on multicore"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=34319", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Cluster i/o with river: Making the fast case common"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=794446", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Evaluating MapReduce for multi-core and multiprocessor systems"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=25490", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "HighPerformance Sorting on Networks of Workstations"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=799320", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Diamond: A storage architecture for early discard in interactive search"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=203374", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Active Disks for Large-Scale Data Processing"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=225969", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Explicit control in the batch-aware distributed file system"}, {"url": "/showciting;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=580542", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "H\u00f6lzle, Web search for a planet: the Google cluster architecture"}, {"url": "/viewdoc/summary;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=760332", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Systematic efficient parallelization of scan and other list homomorphisms"}, {"url": "/showciting;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=810761", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Computation: Practice and Experience"}, {"url": "/showciting;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=5031123", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "10] Jim Gray. Sort benchmark home"}, {"url": "/showciting;jsessionid=D78C8E14E1D713BB0853B3A3489B736C?cid=1851697", "_id": "D78C8E14E1D713BB0853B3A3489B736C?cid", "title": "Sort benchmark home page. http:// research. microsoft. com/ barc/ SortBenchmark"}], "abstart": "<p>MapReduce is a programming model and an associated implementation for processing and generating large data sets. Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Many real world tasks are expressible in this model, as shown in the paper. Programs written in this functional style are automatically parallelized and executed on a large cluster of commodity machines. The run-time system takes care of the details of partitioning the input data, scheduling the program\u2019s execution across a set of machines, handling machine failures, and managing the required inter-machine communication. This allows programmers without any experience with parallel and distributed systems to easily utilize the resources of a large distributed system. Our implementation of MapReduce runs on a large cluster of commodity machines and is highly scalable: a typical MapReduce computation processes many terabytes of data on thousands of machines. Programmers find the system easy to use: hundreds of MapReduce programs have been implemented and upwards of one thousand MapReduce jobs are executed on Google\u2019s clusters every day. 1</p>", "title": "MapReduce: simplified data processing on large clusters  (2004) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=25590", "_id": "25590", "title": "Fast algorithms for mining association rules"}, {"url": "/showciting?cid=235350", "_id": "235350", "title": "Searching Multimedia Databases by Content"}, {"url": "/viewdoc/summary?cid=154291", "_id": "154291", "title": "Data mining on an OLTP system (nearly) for free"}, {"url": "/showciting?cid=1266165", "_id": "1266165", "title": "Active Disks\u2013Remote Execution for Network-Attached Storage"}, {"url": "/viewdoc/summary?cid=1539336", "_id": "1539336", "title": "Parallel Data Mining on ATM-Connected PC Cluster and Optimization of Its Execution Environments"}], "abstart": "<p>p, leaving  sufficient area to include a 200-MHz ARM core  or similar embedded microprocessor.  Disk drive and chip manufacturers are already pursuing  this processor-in-ASIC technology. Infineon (formerly  Siemens Microelectronics) markets a chip called  the TriCore that includes a 100-MHz 32-bit microcontroller,  up to 2 Mbytes of on-chip RAM, and customer  -specific logic---such as the disk functions of  Figure 1, upper right---in a .35 micron process. Cirrus  Logic offers an integrated system-on-chip hard disk  drive controller called 3Ci that includes a 25-MHz  ARM core in the first generation, with promise of 200  MHz in the next generation.  Taking a larger system view, Table 1 shows details  of several large database systems that manage transaction  and data mining workloads. These trends and  ratios in CPU versus aggregate processing power have  remained roughly steady since we compiled this data  in 1998 using information from the Transaction  Processing Performance Council, </p>", "title": "Active Disks for Large-Scale Data Processing  (1992) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=21348", "_id": "21348", "title": "Imperative functional programming"}, {"url": "/showciting?cid=232355", "_id": "232355", "title": "The cube connected cycles: a versatile network for parallel computation, FOCS"}, {"url": "/viewdoc/summary?cid=159619", "_id": "159619", "title": "Scans as Primitive Parallel Operations"}, {"url": "/viewdoc/summary?cid=395615", "_id": "395615", "title": "The Design of a Standard Message Passing Interface for Distributed Memory Concurrent"}, {"url": "/viewdoc/summary?cid=571051", "_id": "571051", "title": "A Cost Calculus for Parallel Functional Programming"}, {"url": "/viewdoc/summary?cid=206814", "_id": "206814", "title": "Powerlist: A structure for parallel recursion"}, {"url": "/viewdoc/summary?cid=564697", "_id": "564697", "title": "List ranking and list scan on the Cray C-90"}, {"url": "/showciting?cid=1643279", "_id": "1643279", "title": "Upwards and downwards accumulations on trees"}, {"url": "/showciting?cid=1277315", "_id": "1277315", "title": "Parallel Computing"}, {"url": "/showciting?cid=1989103", "_id": "1989103", "title": "Constructing list homomorphisms"}, {"url": "/showciting?cid=1658443", "_id": "1658443", "title": "Divacon: A parallel language for scientific computing based on divide-and-conquer"}, {"url": "/showciting?cid=1989107", "_id": "1989107", "title": "A correctness proof of parallel scan"}, {"url": "/viewdoc/summary?cid=1870735", "_id": "1870735", "title": "Stages and transformations in parallel programming"}], "abstart": "<p>Homomorphisms are functions which can be parallelized by the divide-and-conquer paradigm. A class of distributable homomorphisms (DH) is introduced and an efficient parallel implementation schema for all functions of the class is derived by transformations in the Bird-Meertens formalism. The schema can be directly mapped on the hypercube with an unlimited or an arbitrary fixed number of processors, providing provable correctness and predictable performance. The popular scan-function (parallel prefix) illustrates the presentation: the systematically derived implementation for scan coincides with the practically used \"folklore\" algorithm for distributed-memory machines.</p>", "title": "Systematic Efficient Parallelization of Scan and Other List Homomorphisms  (1996) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=54082", "_id": "54082", "title": "Rapid Object Detection Using a Boosted Cascade of Simple Features"}, {"url": "/viewdoc/summary?cid=37603", "_id": "37603", "title": "Color indexing"}, {"url": "/viewdoc/summary?cid=15607", "_id": "15607", "title": "Content-based image retrieval at the end of the early years"}, {"url": "/showciting?cid=1672", "_id": "1672", "title": "Query by image and video content: The QBIC system"}, {"url": "/viewdoc/summary?cid=28974", "_id": "28974", "title": "Data Cube: A Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals. Data Mining and Knowledge Discovery"}, {"url": "/viewdoc/summary?cid=14921", "_id": "14921", "title": "Efficient software-based fault isolation"}, {"url": "/showciting?cid=47275", "_id": "47275", "title": "Computer Vision: A Modern Approach"}, {"url": "/viewdoc/summary?cid=21129", "_id": "21129", "title": "Access Path Selection in a Relational Database Management System"}, {"url": "/viewdoc/summary?cid=73951", "_id": "73951", "title": "Similarity search in high dimensions via hashing"}, {"url": "/viewdoc/summary?cid=7733", "_id": "7733", "title": "Eddies: continuously adaptive query processing"}, {"url": "/viewdoc/summary?cid=57132", "_id": "57132", "title": "Boosting image retrieval"}, {"url": "/viewdoc/summary?cid=197545", "_id": "197545", "title": "A cost model for nearest neighbor search in high-dimensional data space"}, {"url": "/viewdoc/summary?cid=159611", "_id": "159611", "title": "Active disks: programming model, algorithms and evaluation"}, {"url": "/viewdoc/summary?cid=96117", "_id": "96117", "title": "The bayesian image retrieval system, PicHunter: theory, implementation, and psychophysical experiments"}, {"url": "/viewdoc/summary?cid=159462", "_id": "159462", "title": "Interactive learning using a \u2018society of models"}, {"url": "/viewdoc/summary?cid=159635", "_id": "159635", "title": "Active storage for large-scale data mining and multimedia"}, {"url": "/viewdoc/summary?cid=3013", "_id": "3013", "title": "The Coign Automatic Distributed Partitioning System"}, {"url": "/showciting?cid=235350", "_id": "235350", "title": "Searching Multimedia Databases by Content"}, {"url": "/viewdoc/summary?cid=34319", "_id": "34319", "title": "Cluster i/o with river: Making the fast case common"}, {"url": "/viewdoc/summary?cid=203373", "_id": "203373", "title": "A Case for Intelligent Disks (IDISKs"}, {"url": "/viewdoc/summary?cid=107805", "_id": "107805", "title": "Dynamic Function Placement for Dataintensive Cluster Computing"}, {"url": "/showciting?cid=361963", "_id": "361963", "title": "A general approach to D-Dimensional geometric queries"}, {"url": "/showciting?cid=372969", "_id": "372969", "title": "Database machines: an idea whose time has passed? a critique of the future of database machines"}, {"url": "/viewdoc/summary?cid=107842", "_id": "107842", "title": "Interactive data analysis: The control project"}, {"url": "/showciting?cid=538438", "_id": "538438", "title": "G.Das: Dynamic sample selection for approximate query processing"}, {"url": "/viewdoc/summary?cid=2544182", "_id": "2544182", "title": "Generating linear extensions fast"}, {"url": "/showciting?cid=4097473", "_id": "4097473", "title": "Effi cient SoftwareBased Fault Isolation"}, {"url": "/viewdoc/summary?cid=576624", "_id": "576624", "title": "Design and Evaluation of Smart Disk Architecture for DSS Commercial Workloads"}, {"url": "/showciting?cid=569536", "_id": "569536", "title": "Programmer\u2019s tool chest: The OpenCV library"}, {"url": "/viewdoc/summary?cid=799321", "_id": "799321", "title": "Mechanisms of selectivity in channels and enzymes studied with interactive molecular dynamics"}, {"url": "/viewdoc/summary?cid=799324", "_id": "799324", "title": "Mvss: an active storage architecture"}, {"url": "/showciting?cid=297333", "_id": "297333", "title": "Generating linear extensions fast"}, {"url": "/showciting?cid=799327", "_id": "799327", "title": "Distributed computing with load-managed active storage"}, {"url": "/showciting?cid=799326", "_id": "799326", "title": "On Indexing Large Databases for Advanced Data Models"}, {"url": "/showciting?cid=799323", "_id": "799323", "title": "Database machines are coming, database machines are coming"}, {"url": "/showciting?cid=3984106", "_id": "3984106", "title": "Q & A models for interactive search"}, {"url": "/showciting?cid=3866884", "_id": "3866884", "title": "Pattern Classifi cation"}, {"url": "/showciting?cid=1654015", "_id": "1654015", "title": "SimilaritySearch in High Dimensions via Hashing"}, {"url": "/showciting?cid=799322", "_id": "799322", "title": "Object-based image retrieval using the statistics of images"}, {"url": "/viewdoc/summary?cid=799325", "_id": "799325", "title": "Improving transaction processing using a hierarchical computing server"}, {"url": "/showciting?cid=3920916", "_id": "3920916", "title": "Activedisks: Programming model, algorithms and evaluation"}, {"url": "/showciting?cid=4191248", "_id": "4191248", "title": "AND SCHULTEN, K.Mechanisms of selectivity in channels and enzymes studied with interactive molecular dynamics"}, {"url": "/showciting?cid=4191249", "_id": "4191249", "title": "Interactivedata analysis: The CONTROL project"}, {"url": "/showciting?cid=4191250", "_id": "4191250", "title": "Interactive learning usinga society of models. Pattern Recognition 30"}, {"url": "/showciting?cid=4191251", "_id": "4191251", "title": "ANSI T10/1355-D: SCSI Object-Based Storage devicecommands (OSD), September 2003. http://www. t10.org/ftp/t10/drafts/osd/. [31"}], "abstart": "<p>Permission is granted for noncommercial reproduction of the work for educational or research purposes.</p>", "title": "Diamond: A storage architecture for early discard in interactive search  (2004) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=21008", "_id": "21008", "title": "Gapped BLAST and PSI-BLAST: A new generation of protein database search programs. Nucleic Acids Res"}, {"url": "/viewdoc/summary?cid=5714", "_id": "5714", "title": "The anatomy of the grid: Enabling scalable virtual organizations"}, {"url": "/showciting?cid=45161", "_id": "45161", "title": "Condor - a hunter of idle workstations"}, {"url": "/viewdoc/summary?cid=919", "_id": "919", "title": "Resilient Overlay Networks"}, {"url": "/viewdoc/summary?cid=3195", "_id": "3195", "title": "OceanStore: An architecture for global-scale persistent storage"}, {"url": "/viewdoc/summary?cid=13825", "_id": "13825", "title": "Disconnected Operation in the Coda File System"}, {"url": "/viewdoc/summary?cid=14671", "_id": "14671", "title": "Widearea cooperative storage with CFS"}, {"url": "/viewdoc/summary?cid=286877", "_id": "286877", "title": "The Google file system"}, {"url": "/viewdoc/summary?cid=5882", "_id": "5882", "title": "Scale and performance in a distributed file system"}, {"url": "/showciting?cid=7773", "_id": "7773", "title": "A Relational Model of Data for Large Shared Data Banks"}, {"url": "/viewdoc/summary?cid=3198", "_id": "3198", "title": "Storage management and caching in PAST, a large-scale, persistent peer-to-peer storage utility"}, {"url": "/viewdoc/summary?cid=128386", "_id": "128386", "title": "Exokernel: An operating system architecture for 13 resource management"}, {"url": "/viewdoc/summary?cid=30927", "_id": "30927", "title": "A.P.: An Overview of Workflow Management: From Process Modeling to Workflow Automation Infrastructure. Distributed and Parallel Database"}, {"url": "/viewdoc/summary?cid=869", "_id": "869", "title": "Condor-g: A computation management agent for multi-institutional grids"}, {"url": "/viewdoc/summary?cid=5887", "_id": "5887", "title": "Design and implementation of the Sun network file system"}, {"url": "/viewdoc/summary?cid=15967", "_id": "15967", "title": "A security architecture for computational grids"}, {"url": "/viewdoc/summary?cid=80831", "_id": "80831", "title": "Serverless network file systems"}, {"url": "/viewdoc/summary?cid=67281", "_id": "67281", "title": "Ousterhout, \u201cMeasurements of a distributed file system"}, {"url": "/viewdoc/summary?cid=71978", "_id": "71978", "title": "Dummynet: a simple approach to the evaluation of network protocols"}, {"url": "/viewdoc/summary?cid=19127", "_id": "19127", "title": "Farsite: federated, available, and reliable storage for an incompletely trusted environment"}, {"url": "/viewdoc/summary?cid=25260", "_id": "25260", "title": "A secure environment for untrusted helper applications"}, {"url": "/viewdoc/summary?cid=7828", "_id": "7828", "title": "Cooperative caching: Using remote client memory to improve file system performance"}, {"url": "/viewdoc/summary?cid=24194", "_id": "24194", "title": "Locality-Aware Request Distribution in Cluster-based Network Servers"}, {"url": "/viewdoc/summary?cid=2868", "_id": "2868", "title": "Database mining: a performance perspective"}, {"url": "/viewdoc/summary?cid=311262", "_id": "311262", "title": "Maintenance of materialized views: Problems, techniques, version 1 - 26 Feb 2008 and applications"}, {"url": "/viewdoc/summary?cid=67290", "_id": "67290", "title": "A trace-driven analysis of the UNIX 4.2BSD file system"}, {"url": "/viewdoc/summary?cid=25273", "_id": "25273", "title": "Dealing with disaster: surviving misbehaved kernel extensions"}, {"url": "/viewdoc/summary?cid=86409", "_id": "86409", "title": "Ivy: A Read/Write Peer-to-peer File System"}, {"url": "/viewdoc/summary?cid=46296", "_id": "46296", "title": "A comparison of file system workloads"}, {"url": "/viewdoc/summary?cid=102066", "_id": "102066", "title": "Hints for computer systems design"}, {"url": "/viewdoc/summary?cid=13765", "_id": "13765", "title": "Optimizing the migration of virtual computers"}, {"url": "/viewdoc/summary?cid=100446", "_id": "100446", "title": "The Design and Implementation of Zap: a System for Migrating Computing Environments"}, {"url": "/viewdoc/summary?cid=108611", "_id": "108611", "title": "Interposition agents: Transparently interposing user code at the system interface"}, {"url": "/viewdoc/summary?cid=80833", "_id": "80833", "title": "H.M.: Implementing global memory management in a workstation custer"}, {"url": "/viewdoc/summary?cid=100319", "_id": "100319", "title": "Scalable Distributed Data Structures for Internet Service Construction"}, {"url": "/viewdoc/summary?cid=209721", "_id": "209721", "title": "Microkernels meet recursive virtual machines"}, {"url": "/viewdoc/summary?cid=146060", "_id": "146060", "title": "File system usage in Windows NT 4.0"}, {"url": "/viewdoc/summary?cid=107809", "_id": "107809", "title": "Dynamic virtual clusters in a grid site manager"}, {"url": "/viewdoc/summary?cid=59104", "_id": "59104", "title": "Taming aggressive replication in the Pangaea wide-area file system"}, {"url": "/viewdoc/summary?cid=30928", "_id": "30928", "title": "Specification and execution of transactional workflows"}, {"url": "/viewdoc/summary?cid=60504", "_id": "60504", "title": "Automatic I/O hint generation through speculative execution"}, {"url": "/viewdoc/summary?cid=84300", "_id": "84300", "title": "RP*: a family of order-preserving scalable distributed data structures"}, {"url": "/showciting?cid=870", "_id": "870", "title": "LSF: Load sharing in large-scale heterogeneous distributed systems"}, {"url": "/showciting?cid=163761", "_id": "163761", "title": "A study of file sizes and functional lifetimes"}, {"url": "/viewdoc/summary?cid=173333", "_id": "173333", "title": "Merging application-centric and data-centric approaches to support transaction-oriented multi-system workflows"}, {"url": "/viewdoc/summary?cid=1265694", "_id": "1265694", "title": "A longitudinal survey of internet host reliability"}, {"url": "/viewdoc/summary?cid=108605", "_id": "108605", "title": "UFO: A personal global file system based on user-level extensions to the operating system"}, {"url": "/showciting?cid=982147", "_id": "982147", "title": "On the optimum checkpoint interval"}, {"url": "/viewdoc/summary?cid=187337", "_id": "187337", "title": "Transforming Policies into Mechanisms with Infokernel"}, {"url": "/viewdoc/summary?cid=174764", "_id": "174764", "title": "Parrot: Transparent user-level middleware for data-intensive computing"}], "abstart": "<p>We present the design, implementation, and evaluation of the Batch-Aware Distributed File System (BAD-FS), a system designed to orchestrate large, I/O-intensive batch workloads on remote computing clusters distributed across the wide area. BAD-FS consists of two novel components: a storage layer which exposes control of traditionally fixed policies such as caching, consistency, and replication; and a scheduler that exploits this control as needed for different users and workloads. By extracting these controls from the storage layer and placing them in an external scheduler, BAD-FS manages both storage and computation in a coordinated way while gracefully dealing with cache consistency, fault-tolerance, and space management issues in an application-specific manner. Using both microbenchmarks and real applications, we demonstrate the performance benefits of explicit control, delivering excellent end-to-end performance across the wide-area.  </p>", "title": "Explicit Control in a Batch-Aware Distributed File System "}
{"defpaper": [{"url": "/viewdoc/summary?cid=57318", "_id": "57318", "title": "Active messages: A mechanism for integrated communications and computation"}, {"url": "/viewdoc/summary?cid=21037", "_id": "21037", "title": "Myrinet A Gigabit-per-Second LocalArea Network"}, {"url": "/viewdoc/summary?cid=2136", "_id": "2136", "title": "End-to-end arguments in system design"}, {"url": "/showciting?cid=7773", "_id": "7773", "title": "A Relational Model of Data for Large Shared Data Banks"}, {"url": "/viewdoc/summary?cid=87730", "_id": "87730", "title": "U-Net: A user-level network interface for parallel and distributed computing"}, {"url": "/viewdoc/summary?cid=72217", "_id": "72217", "title": "Parallel database systems: The future of high performance database systems"}, {"url": "/viewdoc/summary?cid=171869", "_id": "171869", "title": "Cilk: An efficient multithreaded runtime system"}, {"url": "/viewdoc/summary?cid=51627", "_id": "51627", "title": "\u00aaOrca: A Language for Parallel Programming of Distributed Systems,\u00ba"}, {"url": "/viewdoc/summary?cid=47186", "_id": "47186", "title": "High Performance Messaging on Workstations: Illinois Fast Messages (FM"}, {"url": "/viewdoc/summary?cid=290881", "_id": "290881", "title": "Disk-directed I/O for MIMD multiprocessors"}, {"url": "/viewdoc/summary?cid=77990", "_id": "77990", "title": "A Sffeam Input-Output System"}, {"url": "/showciting?cid=193711", "_id": "193711", "title": "Join Processing in Database Systems with Large Main Memories"}, {"url": "/showciting?cid=7739", "_id": "7739", "title": "Encapsulation of parallelism in the Volcano query processing system"}, {"url": "/viewdoc/summary?cid=133058", "_id": "133058", "title": "The Vesta Parallel File System"}, {"url": "/viewdoc/summary?cid=80840", "_id": "80840", "title": "D.: The Galley parallel file system"}, {"url": "/viewdoc/summary?cid=80835", "_id": "80835", "title": "PPFS: a high performance portable parallel file system"}, {"url": "/viewdoc/summary?cid=1299931", "_id": "1299931", "title": "Chained Declustering: A New Availability Strategy for Multiprocessor Database Machines"}, {"url": "/showciting?cid=187348", "_id": "187348", "title": "Improving the Performance of Log-Structured File Systems with Adaptive Methods"}, {"url": "/viewdoc/summary?cid=25490", "_id": "25490", "title": "HighPerformance Sorting on Networks of Workstations"}, {"url": "/viewdoc/summary?cid=20957", "_id": "20957", "title": "Swift: Using Distributed Disk Striping to Provide High VO Data Rlates. Computing Systems,4(4):405-436,1991"}, {"url": "/viewdoc/summary?cid=290876", "_id": "290876", "title": "PASSION: Parallel and scalable software for InputOutput"}, {"url": "/viewdoc/summary?cid=87725", "_id": "87725", "title": "Active Message Applications Programming Interface and Communication Subsystem Organization"}, {"url": "/viewdoc/summary?cid=41004", "_id": "41004", "title": "Adaptive and reliable parallel computing on networks of workstations"}, {"url": "/viewdoc/summary?cid=3429535", "_id": "3429535", "title": "Lazy threads: implementing a fast parallel call"}, {"url": "/showciting?cid=133062", "_id": "133062", "title": "sfs: A Parallel File System for the CM-5"}, {"url": "/showciting?cid=493803", "_id": "493803", "title": "Parallel Programming in Linda"}, {"url": "/showciting?cid=1378167", "_id": "1378167", "title": "Performance of the iPSC/860 Concurrent File System\u201d, report num"}, {"url": "/viewdoc/summary?cid=787381", "_id": "787381", "title": "Tioga: Providing data management support for scientific visualization applications"}, {"url": "/viewdoc/summary?cid=159614", "_id": "159614", "title": "Searching for the sorting record: Experiences in tuning now-sort"}, {"url": "/viewdoc/summary?cid=975804", "_id": "975804", "title": "Algebraic optimization of computations over scientific databases"}, {"url": "/showciting?cid=392786", "_id": "392786", "title": "Observing the effects of multi-zone disks"}, {"url": "/showciting?cid=24276", "_id": "24276", "title": "Self-monitoring and Selfadapting Systems"}, {"url": "/viewdoc/summary?cid=2868722", "_id": "2868722", "title": "The evolution of the PVM concurrent computing system"}, {"url": "/viewdoc/summary?cid=1517170", "_id": "1517170", "title": "Multipol: A Distributed Data Structure Library"}, {"url": "/viewdoc/summary?cid=1881996", "_id": "1881996", "title": "Transparent fault tolerance for parallel applications on networks of workstations"}, {"url": "/showciting?cid=956890", "_id": "956890", "title": "Loading Databases Using Dataflow Parallelism"}, {"url": "/showciting?cid=225429", "_id": "225429", "title": "Lazy Threads: Implementing a Fast Parallel Call"}, {"url": "/showciting?cid=1429016", "_id": "1429016", "title": "The big time"}, {"url": "/showciting?cid=1156584", "_id": "1156584", "title": "Symmetric multiprocessing in Solaris 2.0"}, {"url": "/showciting?cid=2484819", "_id": "2484819", "title": "What Happens When Processors Are Infinitely Fast and Storage Is Free? Keynote Speech at"}, {"url": "/viewdoc/summary?cid=1517165", "_id": "1517165", "title": "Operating system support for high-performance parallel I/O systems"}, {"url": "/showciting?cid=1517169", "_id": "1517169", "title": "Implementation of tuple space"}, {"url": "/showciting?cid=1106807", "_id": "1106807", "title": "A Performance Analysis of the Gamma Database"}, {"url": "/viewdoc/summary?cid=1517195", "_id": "1517195", "title": "Data parallel programming with the Khoros Data"}, {"url": "/showciting?cid=2726026", "_id": "2726026", "title": "Relational algebra machine based on hash and sort --- its design concepts"}, {"url": "/showciting?cid=2726025", "_id": "2726025", "title": "What HappensWhen Processors Are Infinitely Fast And Storage Is Free"}, {"url": "/showciting?cid=2726027", "_id": "2726027", "title": "SMP Intra-Query Parallelism in DB2UDB. Database Seminar at"}, {"url": "/showciting?cid=2726028", "_id": "2726028", "title": "sfs: A parallel file system"}], "abstart": "<p>We introduce River, a data-flow programming environment and I/O substrate for clusters of computers. River is designed to provide maximum performance in the common case --- even in the face of nonuniformities in hardware, software, and workload. River is based on two simple design features: a high-performance distributed queue, and a storage redundancy mechanism called graduated declustering. We have implemented a number of data-intensive applications on River, which validate our design with near-ideal performance in a variety of non-uniform performance scenarios. </p>", "title": "Cluster I/O with River: Making the Fast Case Common  (1999) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=57318", "_id": "57318", "title": "Active messages: A mechanism for integrated communications and computation"}, {"url": "/viewdoc/summary?cid=21037", "_id": "21037", "title": "Myrinet A Gigabit-per-Second LocalArea Network"}, {"url": "/viewdoc/summary?cid=87730", "_id": "87730", "title": "U-Net: A user-level network interface for parallel and distributed computing"}, {"url": "/showciting?cid=63906", "_id": "63906", "title": "A Case for NOW (Networks of Workstations"}, {"url": "/viewdoc/summary?cid=69826", "_id": "69826", "title": "Virtual Memory Mapped Network Interface for the SHRIMP Multicomputer"}, {"url": "/showciting?cid=146918", "_id": "146918", "title": "Operating System Support for Database Management"}, {"url": "/viewdoc/summary?cid=25491", "_id": "25491", "title": "A comparison of sorting algorithms for the connection machine cm-2"}, {"url": "/showciting?cid=28884", "_id": "28884", "title": "The case for shared nothing"}, {"url": "/viewdoc/summary?cid=48403", "_id": "48403", "title": "The Interaction of Parallel and Sequential Workloads on a Network of Workstations"}, {"url": "/viewdoc/summary?cid=25497", "_id": "25497", "title": "Parallel sorting on a shared-nothing architecture using probabilistic splitting"}, {"url": "/viewdoc/summary?cid=7997", "_id": "7997", "title": "AlphaSort: A RISC Machine Sort"}, {"url": "/viewdoc/summary?cid=225245", "_id": "225245", "title": "Fast Parallel Sorting Under LogP: Experience with the CM-5"}, {"url": "/viewdoc/summary?cid=608199", "_id": "608199", "title": "LogP Performance Assessment of Fast Network Interfaces"}, {"url": "/showciting?cid=379540", "_id": "379540", "title": "et al., \u201cThe Gamma database machine project"}, {"url": "/viewdoc/summary?cid=159612", "_id": "159612", "title": "Scalar Sort Algorithm for RISC Processors"}, {"url": "/showciting?cid=452920", "_id": "452920", "title": "et al.: Prototyping Bubba: A Highly Parallel Database System"}, {"url": "/viewdoc/summary?cid=477725", "_id": "477725", "title": "An overview of DB2 parallel edition"}, {"url": "/showciting?cid=602364", "_id": "602364", "title": "an extensible and parallel dataflow query processing system"}, {"url": "/showciting?cid=437324", "_id": "437324", "title": "Sorting Large Files on a Backend Multiprocessor"}, {"url": "/showciting?cid=1114754", "_id": "1114754", "title": "Parallel external sorting in Volcano"}, {"url": "/showciting?cid=420357", "_id": "420357", "title": "Fastsort: a distributed single-input single-output external sort"}, {"url": "/showciting?cid=1299932", "_id": "1299932", "title": "A Measure of Transaction Processing Power"}, {"url": "/showciting?cid=1156584", "_id": "1156584", "title": "Symmetric multiprocessing in Solaris 2.0"}, {"url": "/showciting?cid=420346", "_id": "420346", "title": "Sorting Large Data Files on POMA"}, {"url": "/showciting?cid=2540466", "_id": "2540466", "title": "Informix online XPS"}, {"url": "/showciting?cid=2735984", "_id": "2735984", "title": "Blelloch.Radix Sort for Vector Multiprocessors"}, {"url": "/showciting?cid=2958900", "_id": "2958900", "title": "Cooperative-Shared Memory: Software and Hardware for Scalable Multiprocessors"}, {"url": "/showciting?cid=3264284", "_id": "3264284", "title": "A practical external sort for shared disk MPP\u2019s"}, {"url": "/showciting?cid=1385394", "_id": "1385394", "title": "A Measure of Transaction Processing Power"}, {"url": "/showciting?cid=3264286", "_id": "3264286", "title": "The Parameterized Round-Robin Partitioned Algorithm for Parallel External Sort"}, {"url": "/showciting?cid=2537796", "_id": "2537796", "title": "A memory-adaptive sort (masort) for database systems"}, {"url": "/showciting?cid=3264283", "_id": "3264283", "title": "GLUnix: A Global Layer Unix for NOW. http://now.cs.berkeley.edu/Glunix/glunix.html"}, {"url": "/showciting?cid=3264285", "_id": "3264285", "title": "DBC/1012 Data Base Computer System Manual, release 2.0 edition"}, {"url": "/showciting?cid=9869913", "_id": "9869913", "title": "A Case for NOW (Networks of Workstations). LEEEMicro"}, {"url": "/showciting?cid=9869914", "_id": "9869914", "title": "The Interaction of PamJlel and Sequential Workloads on a Network of Workstations"}, {"url": "/showciting?cid=9869915", "_id": "9869915", "title": "et af. Protntyping Bubba, a Highly Parallel Database System"}, {"url": "/showciting?cid=9869916", "_id": "9869916", "title": "A Measure of Transaction Processing Power"}, {"url": "/showciting?cid=9869917", "_id": "9869917", "title": "Volcano: An Extensible and Paraflel Dataflow Query processing System"}, {"url": "/showciting?cid=9869918", "_id": "9869918", "title": "Cooperative-Shared Memory: Software and Hardware for Scafable Multiprocessors"}, {"url": "/showciting?cid=9869919", "_id": "9869919", "title": "AlphaSort: A RISC Machine Sort"}], "abstart": "<p>We report the performance of NOW-Sort, a collection of sorting implementations on a Network of Workstations (NOW). We find that paraflel sorting on a NOW is competitive to sorting on the large-scale SMPS that have traditionally held the performance records. On a 64-node cluster, we sort 6.0 GB in just under one minute, while a 32-node cluster finishes the Datamation benchmark in 2.41 seconds. Our implementations can be applied to a variety of disk, memory, and processor configurations; we highlight salient issues for tuning each component of the system. We evaluate the use of commodity operating systems and hardware for parallel sorting. We find existing OS primitives for memory management and file access adequate. Due to aggregate communication and disk bandwidth requirements, the bottleneck of our system is the workstation I/O bus.  </p>", "title": " High-Performance Sorting on Networks of Workstations  (1997) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=227373", "_id": "227373", "title": "Mapreduce: simplified data processing on large clusters"}, {"url": "/viewdoc/summary?cid=286877", "_id": "286877", "title": "The Google file system"}, {"url": "/viewdoc/summary?cid=431082", "_id": "431082", "title": "Language support for lightweight transactions"}, {"url": "/viewdoc/summary?cid=206811", "_id": "206811", "title": "Parallel Prefix Computation"}, {"url": "/viewdoc/summary?cid=159619", "_id": "159619", "title": "Scans as Primitive Parallel Operations"}, {"url": "/showciting?cid=211296", "_id": "211296", "title": "Multithread Programming With Pthreads"}, {"url": "/viewdoc/summary?cid=717830", "_id": "717830", "title": "Using the compiler to improve cache replacement decisions"}, {"url": "/showciting?cid=3865409", "_id": "3865409", "title": "et al., \u201cNiagara: a 32-way multithreaded Sparc processor"}, {"url": "/viewdoc/summary?cid=1022892", "_id": "1022892", "title": "A robust main-memory compression scheme"}, {"url": "/showciting?cid=158382", "_id": "158382", "title": "et al. A stream compiler for communication-exposed architectures"}, {"url": "/viewdoc/summary?cid=304503", "_id": "304503", "title": "Program demultiplexing: Data-flow based speculative parallelization of methods in sequential programs"}, {"url": "/showciting?cid=3686757", "_id": "3686757", "title": "et al, X10: An Object-Oriented Approach to Non-Uniform Cluster"}, {"url": "/showciting?cid=1270979", "_id": "1270979", "title": "Stream Processor Architecture"}, {"url": "/showciting?cid=4026747", "_id": "4026747", "title": "Synthesis Moves Computers to the Era of Tera. Technology@Intel Magazine"}, {"url": "/showciting?cid=3864660", "_id": "3864660", "title": "Smolens et al. Fingerprinting: Bounding soft-error detection latency and bandwidth"}, {"url": "/showciting?cid=4600957", "_id": "4600957", "title": "et al. The Atomos Transactional Programming Language"}, {"url": "/showciting?cid=7661829", "_id": "7661829", "title": "et al. \u201cThe implementation of the Cilk-5 multithreaded language"}, {"url": "/showciting?cid=4735088", "_id": "4735088", "title": "et al. Robust System Design with Built-In Soft-Error Resilience"}, {"url": "/showciting?cid=3864659", "_id": "3864659", "title": "et al. Detailed design and evaluation of redundant multithreading alternatives"}, {"url": "/showciting?cid=3686755", "_id": "3686755", "title": "et al. The Fortress Language Specification. Sun Microsystems"}, {"url": "/showciting?cid=7661828", "_id": "7661828", "title": "et al. Web Search for a Planet: The Google Cluster Architecture"}, {"url": "/showciting?cid=7661830", "_id": "7661830", "title": "et al. Programming Language Optimizations for Modular Router Configurations"}, {"url": "/showciting?cid=7661831", "_id": "7661831", "title": "A Low Power Merge Cell Processor for Real-Time Spike Sorting in Implantable Neural Prostheses"}], "abstart": "<p>This paper evaluates the suitability of the MapReduce model for multi-core and multi-processor systems. MapReduce was created by Google for application development on data-centers with thousands of servers. It allows programmers to write functional-style code that is automatically parallelized and scheduled in a distributed system. We describe Phoenix, an implementation of MapReduce for shared-memory systems that includes a programming API and an efficient runtime system. The Phoenix runtime automatically manages thread creation, dynamic task scheduling, data partitioning, and fault tolerance across processor nodes. We study Phoenix with multi-core and symmetric multiprocessor systems and evaluate its performance potential and error recovery features. We also compare MapReduce code to code written in lower-level APIs such as P-threads. Overall, we establish that, given a careful implementation, MapReduce is a promising model for scalable performance on shared-memory systems with simple parallel code. 1</p>", "title": "Evaluating MapReduce for multi-core and multiprocessor systems  (2007) "}
{"defpaper": [], "abstart": "<p>Parallel computing on local area networks is generally based on mechanisms that specifically target the properties of the local area network environment. However, those mechanisms do not effectively extend to wide area networks due to issues such as heterogeneity, security, and administrative boundaries. We present a system which enables application programmers to write parallel programs in Java and allows Java-capable browsers to execute parallel tasks. It comprises a virtual machine model which isolates the program from the execution environment, and a runtime system realizing this virtual machine on the Web. Load balancing and fault masking are transparently provided by the runtime system.</p>", "title": "Charlotte: Metacomputing on the Web  (1996) "}
{"defpaper": [{"url": "/showciting?cid=42427", "_id": "42427", "title": "The Art of Computer Programming"}, {"url": "/showciting?cid=960678", "_id": "960678", "title": "An introduction to Boolean function complexity, Societe Math. de France Asterisque"}, {"url": "/showciting?cid=960676", "_id": "960676", "title": "Sequential Machines and Automata Theory"}, {"url": "/showciting?cid=960677", "_id": "960677", "title": "On the addiUon ofbmary numbers"}, {"url": "/showciting?cid=960679", "_id": "960679", "title": "The Complexity of Computing. Wdey"}], "abstart": "<p>ABSTRACT The prefix problem is to compute all the products x t o x2.... o xk for i ~ k. ~ n, where o is an associative operation A recurstve construction IS used to obtain a product circuit for solving the prefix problem which has depth exactly [log:n] and size bounded by 4n An application yields fast, small Boolean ctrcmts to simulate fimte-state transducers. By simulating a sequentml adder, a Boolean clrcmt which has depth 2[Iog2n] + 2 and size bounded by 14n Is obtained for n-bit binary addmon The size can be decreased significantly by permitting the depth to increase by an addmve constant</p>", "title": "Parallel Prefix Computation  (1980) "}
{"defpaper": [{"url": "/showciting?cid=28795", "_id": "28795", "title": "Data Structures and Network Algorithms"}, {"url": "/viewdoc/summary?cid=9655", "_id": "9655", "title": "Sorting networks and their application, in"}, {"url": "/showciting?cid=15936", "_id": "15936", "title": "The Connection Machine"}, {"url": "/showciting?cid=113300", "_id": "113300", "title": "Parallel Merge Sort"}, {"url": "/showciting?cid=130171", "_id": "130171", "title": "Parallelism in random access machines"}, {"url": "/viewdoc/summary?cid=206811", "_id": "206811", "title": "Parallel Prefix Computation"}, {"url": "/showciting?cid=206804", "_id": "206804", "title": "A Programming Language"}, {"url": "/showciting?cid=57825", "_id": "57825", "title": "Hot Spot\u2019 contention and combining in multistage interconnection networks"}, {"url": "/showciting?cid=191417", "_id": "191417", "title": "The Cosmic Cube"}, {"url": "/showciting?cid=467071", "_id": "467071", "title": "An O(N log N) sorting network"}, {"url": "/showciting?cid=25504", "_id": "25504", "title": "Tight bounds on the complexity of parallel sorting"}, {"url": "/showciting?cid=753555", "_id": "753555", "title": "Parallel tree contraction and its applications"}, {"url": "/viewdoc/summary?cid=1228808", "_id": "1228808", "title": "Basic techniques for the efficient coordination of very large numbers of cooperating sequential processors"}, {"url": "/showciting?cid=78735", "_id": "78735", "title": "Sorting and Searching"}, {"url": "/showciting?cid=948270", "_id": "948270", "title": "Sorting on a Mesh Connected Parallel Computer"}, {"url": "/showciting?cid=309368", "_id": "309368", "title": "Finding the maximum, merging and sorting in a parallel computation model"}, {"url": "/showciting?cid=1010933", "_id": "1010933", "title": "The power of parallel prefix"}, {"url": "/showciting?cid=1930882", "_id": "1930882", "title": "The Complexity of Parallel Computations"}, {"url": "/showciting?cid=924758", "_id": "924758", "title": "Computing connected components in parallel computers"}, {"url": "/showciting?cid=136592", "_id": "136592", "title": "Principles of Interactive Computer Graphics"}, {"url": "/showciting?cid=197861", "_id": "197861", "title": "Faster optimal parallel prefix sums and list ranking"}, {"url": "/showciting?cid=938211", "_id": "938211", "title": "The nyu ultracomputer\u2014designing a mimd, shared-memory parallel machine"}, {"url": "/showciting?cid=188186", "_id": "188186", "title": "On the algorithmic complexity of discrete functions"}, {"url": "/showciting?cid=924754", "_id": "924754", "title": "New connectivity and msf algorithms for ultracomputer and pram"}, {"url": "/showciting?cid=368274", "_id": "368274", "title": "A Universal Interconnection Pattern for Parallel Computers"}, {"url": "/viewdoc/summary?cid=1982429", "_id": "1982429", "title": "Parallel solutions to geometric problems on the scan model of computation"}, {"url": "/showciting?cid=206812", "_id": "206812", "title": "New bounds for parallel prefix circuits"}, {"url": "/viewdoc/summary?cid=206810", "_id": "206810", "title": "The chip complexity of binary arithmetic"}, {"url": "/showciting?cid=1640016", "_id": "1640016", "title": "Scan primitives and parallel vector models"}, {"url": "/showciting?cid=2044176", "_id": "2044176", "title": "Fluent Parallel Computation"}, {"url": "/showciting?cid=2105287", "_id": "2105287", "title": "efficient parallel algorithms for some graph problems"}, {"url": "/showciting?cid=1617041", "_id": "1617041", "title": "A Chronology of Computer Chess and its Literature"}, {"url": "/showciting?cid=1634177", "_id": "1634177", "title": "Transportation Networks"}, {"url": "/showciting?cid=2292830", "_id": "2292830", "title": "Random access stored program machines"}, {"url": "/showciting?cid=3365868", "_id": "3365868", "title": "Merging with parallel processors"}, {"url": "/showciting?cid=3224343", "_id": "3224343", "title": "A Network of Computers to Execute Reduction Languages"}, {"url": "/showciting?cid=3137729", "_id": "3137729", "title": "Parallel Processsing with the Perfect Shuffle"}, {"url": "/showciting?cid=2027359", "_id": "2027359", "title": "Approximate Scheduling, Exact Scheduling, and Applications to Parallel Algorithms"}, {"url": "/showciting?cid=1672433", "_id": "1672433", "title": "Area-efficient layouts (for VLSI"}, {"url": "/showciting?cid=1733892", "_id": "1733892", "title": "Render: A Data Parallel Approach to Polygon Rendering"}, {"url": "/showciting?cid=3224342", "_id": "3224342", "title": "Efficient Asynchronous Parallel Prefix Algorithms"}, {"url": "/showciting?cid=3365866", "_id": "3365866", "title": "The BBN multiprocessors: Butterfly and Monarch"}, {"url": "/showciting?cid=3365867", "_id": "3365867", "title": "uvka. O jist'em probl'en minim'al ' im. Pr'aca Moravsk'e Pr ' irodovedeck'e Spolecnosti, (3):37--58"}], "abstart": "<p>In most parallel random-access machine (P-RAM) models, memory references are assumed to take unit time. In practice, and in theory, certain scan operations, also known as prefix computations, can executed in no more time than these parallel memory references. This paper outline an extensive study of the effect of including in the P-RAM models, such scan operations as unit-time primitives. The study concludes that the primitives improve the asymptotic running time of many algorithms by an O(lg n) factor, greatly simplify the description of many algorithms, and are significantly easier to implement than memory references. We therefore argue that the algorithm designer should feel free to use these operations as if they were as cheap as a memory reference. This paper describes five algorithms that clearly illustrate how the scan primitives can be used in algorithm design: a radix-sort algorithm, a quicksort algorithm, a minimumspanning -tree algorithm, a line-drawing algorithm and a mergi...</p>", "title": "Scans as Primitive Parallel Operations  (1987) "}
{"defpaper": [{"url": "/showciting?cid=4162", "_id": "4162", "title": "Time, Clocks and Ordering of Events in Distributed Systems"}, {"url": "/viewdoc/summary?cid=52205", "_id": "52205", "title": "The Byzantine generals problem"}, {"url": "/viewdoc/summary?cid=61668", "_id": "61668", "title": "Distributed snapshots: Determining global states of distributed systems"}, {"url": "/viewdoc/summary?cid=127542", "_id": "127542", "title": "Kerberos: An Authentication Service for Open Network Systems"}, {"url": "/viewdoc/summary?cid=25272", "_id": "25272", "title": "The protection of information in computer systems"}, {"url": "/viewdoc/summary?cid=869", "_id": "869", "title": "Condor-g: A computation management agent for multi-institutional grids"}, {"url": "/viewdoc/summary?cid=15967", "_id": "15967", "title": "A security architecture for computational grids"}, {"url": "/viewdoc/summary?cid=14912", "_id": "14912", "title": "Extensibility, safety and performance in the SPIN operating system"}, {"url": "/viewdoc/summary?cid=48434", "_id": "48434", "title": "A resource management architecture for metacomputing systems"}, {"url": "/viewdoc/summary?cid=25073", "_id": "25073", "title": "Matchmaking: Distributed Resource Management for High Throughput Computing"}, {"url": "/viewdoc/summary?cid=63912", "_id": "63912", "title": "BEOWULF: A parallel workstation for scientific computation"}, {"url": "/viewdoc/summary?cid=25273", "_id": "25273", "title": "Dealing with disaster: surviving misbehaved kernel extensions"}, {"url": "/showciting?cid=338104", "_id": "338104", "title": "Grapevine: an exercise in distributed computing"}, {"url": "/viewdoc/summary?cid=82560", "_id": "82560", "title": "The LOCUS distributed operating system"}, {"url": "/showciting?cid=344351", "_id": "344351", "title": "Multiprocessor scheduling with the aid of network flow algorithms"}, {"url": "/showciting?cid=531115", "_id": "531115", "title": "The Muttics System: An Examination of its Structure"}, {"url": "/viewdoc/summary?cid=108616", "_id": "108616", "title": "Supporting checkpointing and process migration outside the Unix kernel"}, {"url": "/showciting?cid=82550", "_id": "82550", "title": "Checkpoint and migration of UNIX processes in the Condor distributed processing system"}, {"url": "/showciting?cid=584802", "_id": "584802", "title": "Experience with the condor distributed batch system"}, {"url": "/showciting?cid=1578432", "_id": "1578432", "title": "A worldwide flock of Condors: Load sharing among workstation clusters"}, {"url": "/viewdoc/summary?cid=68971", "_id": "68971", "title": "Core Algorithms of the Maui Scheduler"}, {"url": "/viewdoc/summary?cid=186433", "_id": "186433", "title": "Replica selection in the globus data grid"}, {"url": "/viewdoc/summary?cid=21982", "_id": "21982", "title": "Condor Technical Summary"}, {"url": "/viewdoc/summary?cid=225977", "_id": "225977", "title": "Stork: Making data placement a first class citizen in the grid"}, {"url": "/showciting?cid=870", "_id": "870", "title": "LSF: Load sharing in large-scale heterogeneous distributed systems"}, {"url": "/showciting?cid=225976", "_id": "225976", "title": "D.: Portable batch system: external reference specification"}, {"url": "/showciting?cid=163315", "_id": "163315", "title": "Remote Unix: Turning idle workstations into cycle servers"}, {"url": "/showciting?cid=603994", "_id": "603994", "title": "Condor \u2013 a distributed job scheduler"}, {"url": "/viewdoc/summary?cid=267968", "_id": "267968", "title": "Solving large quadratic assignment problems on computational grids"}, {"url": "/showciting?cid=30425", "_id": "30425", "title": "Deploying a high throughput computing cluster"}, {"url": "/viewdoc/summary?cid=2981", "_id": "2981", "title": "Protocols and services for distributed data-intensive science"}, {"url": "/viewdoc/summary?cid=493853", "_id": "493853", "title": "Interfacing Condor and PVM to Harness the Cycles of Workstation Clusters"}, {"url": "/viewdoc/summary?cid=174764", "_id": "174764", "title": "Parrot: Transparent user-level middleware for data-intensive computing"}, {"url": "/showciting?cid=265167", "_id": "265167", "title": "High-Throughput Resource Management"}, {"url": "/viewdoc/summary?cid=109894", "_id": "109894", "title": "Resource Management through Multilateral Matchmaking"}, {"url": "/viewdoc/summary?cid=271638", "_id": "271638", "title": "Providing Resource Management Services to Parallel Applications"}, {"url": "/viewdoc/summary?cid=216464", "_id": "216464", "title": "Matchmaking Frameworks For Distributed Resource Management"}, {"url": "/showciting?cid=344335", "_id": "344335", "title": "A stable distributed scheduling algorithm"}, {"url": "/viewdoc/summary?cid=216459", "_id": "216459", "title": "Gathering at the well: Creating communities for grid I/O"}, {"url": "/viewdoc/summary?cid=603289", "_id": "603289", "title": "Cheap cycles from the desktop to the dedicated cluster: combining opportunistic and dedicated scheduling with Condor,\" presented at Conference on Linux Clusters: The HPC Revolution"}, {"url": "/viewdoc/summary?cid=216468", "_id": "216468", "title": "Bypass: A tool for building split execution systems"}, {"url": "/viewdoc/summary?cid=216460", "_id": "216460", "title": "Utilizing widely distributed computational resources efficiently with execution domains"}, {"url": "/showciting?cid=3583374", "_id": "3583374", "title": "Master-Worker: An enabling framework for master-worker applications on the computational grid"}, {"url": "/showciting?cid=615912", "_id": "615912", "title": "The CRYSTAL Multicomputer: Design and Implementation Experience,\" Computer Sciences"}, {"url": "/showciting?cid=999688", "_id": "999688", "title": "Design and Evaluation of a Resource Selection Framework for Grid Applications"}, {"url": "/viewdoc/summary?cid=1407637", "_id": "1407637", "title": "Error Scope on a Computational Grid: Theory and Practice"}, {"url": "/showciting?cid=174762", "_id": "174762", "title": "Globus: A metacomputing intrastructure toolkit"}, {"url": "/showciting?cid=2321145", "_id": "2321145", "title": "What is a \"distributed\" data processing system"}, {"url": "/showciting?cid=3637989", "_id": "3637989", "title": "RFC 2222: Simple Authentication and Security Layer (SASL"}, {"url": "/viewdoc/summary?cid=2545105", "_id": "2545105", "title": "The DBC: Processing scientific data over the internet"}], "abstart": "<p>Since 1984, the Condor project has enabled ordinary users to do extraordinary computing. Today, the project continues to explore the social and technical problems of cooperative computing on scales ranging from the desktop to the world-wide computational grid. In this chapter, we provide the history and philosophy of the Condor project and describe how it has interacted with other projects and evolved along with the field of distributed computing. We outline the core components of the Condor system and describe how the technology of computing must correspond to social structures. Throughout, we reflect on the lessons of experience and chart the course traveled by research ideas as they grow into production systems.</p>", "title": "Distributed Computing in Practice: The Condor Experience  (2005) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=2673", "_id": "2673", "title": "On the selfsimilar nature of Ethernet traffic"}, {"url": "/viewdoc/summary?cid=5400", "_id": "5400", "title": "Tcl and the Tk Toolkit"}, {"url": "/viewdoc/summary?cid=9133", "_id": "9133", "title": "GroupLens: An open architecture for collaborative filtering of netnews"}, {"url": "/viewdoc/summary?cid=9122", "_id": "9122", "title": "TreadMarks: Distributed Shared Memory on Standard Workstations and Operating Systems"}, {"url": "/viewdoc/summary?cid=4261", "_id": "4261", "title": "The PIM Architecture for Wide-Area Multicast Routing"}, {"url": "/viewdoc/summary?cid=9108", "_id": "9108", "title": "A hierarchical internet object cache"}, {"url": "/viewdoc/summary?cid=9121", "_id": "9121", "title": "Lazy Release Consistency for Software Distributed Shared Memory"}, {"url": "/viewdoc/summary?cid=9101", "_id": "9101", "title": "R.H.: Improving TCP/IP Performance Over Wireless Networks"}, {"url": "/viewdoc/summary?cid=9126", "_id": "9126", "title": "The New Routing Algorithm for the ARPANET"}, {"url": "/viewdoc/summary?cid=9118", "_id": "9118", "title": "The transaction concept: Virtues and limitations"}, {"url": "/viewdoc/summary?cid=9125", "_id": "9125", "title": "An Empirical Model of HTTP Network Traffic"}, {"url": "/viewdoc/summary?cid=9128", "_id": "9128", "title": "Domain Name System"}, {"url": "/viewdoc/summary?cid=9113", "_id": "9113", "title": "The Bayou Architecture: Support for Data Sharing Among Mobile Users"}, {"url": "/viewdoc/summary?cid=9105", "_id": "9105", "title": "A Scalable, Customizable Discovery and Access System"}, {"url": "/showciting?cid=9102", "_id": "9102", "title": "A NonStop kernel"}, {"url": "/viewdoc/summary?cid=9146", "_id": "9146", "title": "Using smart clients to build scalable services"}, {"url": "/showciting?cid=9106", "_id": "9106", "title": "Measuring the web"}, {"url": "/viewdoc/summary?cid=9139", "_id": "9139", "title": "7-11). Digestor: Device-independent Access to the World Wide Web"}, {"url": "/viewdoc/summary?cid=9103", "_id": "9103", "title": "How to Personalize the Web"}, {"url": "/viewdoc/summary?cid=9112", "_id": "9112", "title": "A case for caching file objects inside internetworks"}, {"url": "/viewdoc/summary?cid=9116", "_id": "9116", "title": "Privacy-enhancing technologies for the internet"}, {"url": "/viewdoc/summary?cid=9111", "_id": "9111", "title": "Explaining world wide web traffic self-similarity"}, {"url": "/showciting?cid=9110", "_id": "9110", "title": "Introduction and overview of the Multics system"}, {"url": "/viewdoc/summary?cid=9120", "_id": "9120", "title": "Server operating systems"}, {"url": "/viewdoc/summary?cid=9129", "_id": "9129", "title": "Operating system support for busy Internet servers"}, {"url": "/showciting?cid=9132", "_id": "9132", "title": "The New Hacker's Dictionary"}, {"url": "/viewdoc/summary?cid=9117", "_id": "9117", "title": "TAZ servers and the rewebber network: enabling anonymous publishing on the world wide web,\u201d First Monday 3(4"}, {"url": "/showciting?cid=9114", "_id": "9114", "title": "Reducing WWW Latency and Bandwidth Requirements via Real-Time Distillation"}, {"url": "/showciting?cid=9115", "_id": "9115", "title": "Adapting to Network and Client Variation via On-Demand Dynamic Transcoding"}, {"url": "/showciting?cid=9147", "_id": "9147", "title": "A Proxy Based Filtering Mechanism for the Mobile Environment"}, {"url": "/viewdoc/summary?cid=9097", "_id": "9097", "title": "Extensible, scalable monitoring for clusters of computers"}, {"url": "/showciting?cid=9098", "_id": "9098", "title": "et.al, \"A Case for NOW (Networks of Workstations"}, {"url": "/showciting?cid=9144", "_id": "9144", "title": "Lottery Scheduling: Flexible Proportional Share Resource Management"}, {"url": "/showciting?cid=9127", "_id": "9127", "title": "The Internet Report"}, {"url": "/showciting?cid=9134", "_id": "9134", "title": "High-Performance Local-Area Communication Using Fast Sockets"}, {"url": "/showciting?cid=9142", "_id": "9142", "title": "The UK National Web Cache - The State of the Art"}, {"url": "/showciting?cid=9104", "_id": "9104", "title": "et al. Grapevine: An Exercise in Distributed Computing"}, {"url": "/showciting?cid=9137", "_id": "9137", "title": "The worm programs\u2013early experience with a distributed computation"}, {"url": "/viewdoc/summary?cid=9100", "_id": "9100", "title": "A Framework for Environment Aware Mobile Applications"}, {"url": "/showciting?cid=9141", "_id": "9141", "title": "Pan-Browser Support for Annotations and"}, {"url": "/showciting?cid=9124", "_id": "9124", "title": "et al. Enhanced Services for World Wide Web in Mobile WAN Environment"}, {"url": "/showciting?cid=9136", "_id": "9136", "title": "Programming the Internet from the Server-Side with Tcl and"}, {"url": "/showciting?cid=9138", "_id": "9138", "title": "DeleGate Server. Documentation available at http:// www.aubg.edu:8080/cii/src/delegate3.0.17/doc/Manual.txt"}, {"url": "/showciting?cid=9099", "_id": "9099", "title": "Scalability Issues for High Performance"}, {"url": "/showciting?cid=9119", "_id": "9119", "title": "Self-Similarity in File-Systems: Measurement and Applications. Unpublished, available at http:/ /www.cs.berkeley.edu/~gribble/papers/papers.html"}, {"url": "/showciting?cid=9135", "_id": "9135", "title": "Perceptual Image Quality: Concept and Measurement"}, {"url": "/showciting?cid=9123", "_id": "9123", "title": "Shared Virtual Memory on Loosely Coupled Microprocessors"}, {"url": "/showciting?cid=9145", "_id": "9145", "title": "Shoduoka Mediator Service. http://www.lfw.org/ shodouka"}, {"url": "/showciting?cid=2381368", "_id": "2381368", "title": "Netpbm release 7. ftp://wuarchive.wustl.edu/graphics/ graphics/packages/NetPBM"}, {"url": "/showciting?cid=9107", "_id": "9107", "title": "RFC 1764: DNS Support for Load Balancing"}], "abstart": "<p>This paper has benefited from the detailed and perceptive comments of our reviewers, especially our shepherd Hank Levy. We thank Randy Katz and Eric Anderson for their detailed readings of early drafts of this paper, and David Culler for his ideas on TACC's potential as a model for cluster programming. Ken Lutz and Eric Fraser configured and administered the test network on which the TranSend scaling experiments were performed. Cliff Frost of the UC Berkeley Data Communications and Networks Services group allowed us to collect traces on the Berkeley dialup IP network and has worked with us to deploy and promote TranSend within Berkeley. Undergraduate researchers Anthony Polito, Benjamin Ling, and Andrew Huang implemented various parts of TranSend's user profile database and user interface. Ian Goldberg and David Wagner helped us debug TranSend, especially through their implementation of the rewebber</p>", "title": "Cluster-Based Scalable Network Services  (1997) "}
{"defpaper": [], "abstart": "<p>In this paper, wehave constructed a large scale ATM-connected PC cluster consists of 100 PCs, implemented a data mining application, and optimized its execution environment. Default parameters of TCP retransmission mechanism cannot provide good performance for data mining application, since a lot of collisions occur in the case of all-to-all multicasting in the large scale PC cluster. Using a TCP retransmission parameters according to the proposed parameter optimization, reasonably good performance improvementisachieved for parallel data mining on 100 PCs. Association rule mining, one of the best-known problems in data mining, differs from conventional scientific calculations in its usage of main memory.Wehaveinvestigated the feasibility of using available memory on remote nodes as a swap area when working nodes need to swap out their real memory contents. According to the experimental results on our PC cluster, the proposed method is expected to be considerably better than using hard disks as a swapping device.</p>", "title": "Parallel Data Mining on ATM-Connected PC Cluster and Optimization of its Execution Environments  (2000) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=21872", "_id": "21872", "title": "How to Leak a Secret"}, {"url": "/showciting?cid=15936", "_id": "15936", "title": "The Connection Machine"}, {"url": "/showciting?cid=98790", "_id": "98790", "title": "Algebraic Coding Theory"}, {"url": "/showciting?cid=58457", "_id": "58457", "title": "Probabilistic construction of deterministic algorithms: approximating packing integer programs"}, {"url": "/showciting?cid=101202", "_id": "101202", "title": "Fingerprinting by random polynomials"}, {"url": "/showciting?cid=213168", "_id": "213168", "title": "Scheme for Fast Parallel Communication"}, {"url": "/showciting?cid=191417", "_id": "191417", "title": "The Cosmic Cube"}, {"url": "/showciting?cid=6279", "_id": "6279", "title": "Price Theory and"}, {"url": "/viewdoc/summary?cid=147044", "_id": "147044", "title": "Probabilistic algorithms in finite fields"}, {"url": "/showciting?cid=186946", "_id": "186946", "title": "An Introduction to Linear Algebra"}, {"url": "/showciting?cid=1870354", "_id": "1870354", "title": "Parallel Communication with Limited Buffers"}, {"url": "/showciting?cid=2850158", "_id": "2850158", "title": "A model of SIMD machines and a comparison of various interconnection networks"}, {"url": "/showciting?cid=2245293", "_id": "2245293", "title": "Pooling, splitting and restituting information to overcome total failure of some channels of communication"}], "abstart": "<p>Abstract. An Information Dispersal Algorithm (IDA) is developed that breaks a file F of length L =  ( F ( into n pieces F,, 1 5 i 5 n, each of length ( F, 1 = L/m, so that every m pieces suffice for reconstructing F. Dispersal and reconstruction are computationally efficient. The sum of the lengths ( F, 1 is (n/m). L. Since n/m can be chosen to be close to I, the IDA is space eflicient. IDA has numerous applications to secure and reliable storage of information in computer networks and even on single disks, to fault-tolerant and efficient transmission of information in networks, and to communi-cations between processors in parallel computers. For the latter problem provably time-efftcient and highly fault-tolerant routing on the n-cube is achieved, using just constant size buffers. Categories and Subject Descriptors: E.4 [Coding and Information Theory]: nonsecret encoding schemes</p>", "title": "Efficient dispersal of information for security, load balancing, and fault tolerance  (1989) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=5882", "_id": "5882", "title": "Scale and performance in a distributed file system"}, {"url": "/showciting?cid=299", "_id": "299", "title": "A Case for Redundant Arrays of Inexpensive Disks (RAID"}, {"url": "/viewdoc/summary?cid=28251", "_id": "28251", "title": "Frangipani: A scalable distributed file system"}, {"url": "/viewdoc/summary?cid=19137", "_id": "19137", "title": "A Cost-Effective, High-Bandwidth Storage Architecture"}, {"url": "/viewdoc/summary?cid=131182", "_id": "131182", "title": "Replication in the Harp file system"}, {"url": "/viewdoc/summary?cid=34319", "_id": "34319", "title": "Cluster i/o with river: Making the fast case common"}, {"url": "/viewdoc/summary?cid=46301", "_id": "46301", "title": "The Global File System"}, {"url": "/showciting?cid=1046946", "_id": "1046946", "title": "Swift: using distributed disk stripping to provide high I/O data rates"}, {"url": "/showciting?cid=3602563", "_id": "3602563", "title": "Serverless networkfile systems"}, {"url": "/showciting?cid=3602564", "_id": "3602564", "title": "GPFS: A shared-diskfile system for large computing clusters"}], "abstart": "<p>We have designed and implemented the Google File System, a scalable distributed file system for large distributed data-intensive application s. It provides fault tolerance while running on inexpensive commodity hardware, and it delivers high aggregate performance to a large number of clients. While sharing man y of the same goals as previous distributed file systems, our design has been driven by observations of our application workloads and technological environment, both current and anticipated, that reflect a marked departure from some earlier file system assumptions. This has led us to reexamine tradition al choices an d explore radically  different design points. The file system has successfully met our storage needs. It is widely deployed within Google as the storage platform for the gen ration and processing of data used by our service as well as research and development efforts that require large data sets. The largest cluster to date provides hundreds of terabytes of storage across thousands of disks on over a thousand machines, and it is concurrently accessed by hundreds of clients. In this paper, we present file system interface extensions designed to support distributed application, discuss many aspects of our design, and report measurements from both micro-benchmarks and real world use.</p>", "title": "The Google File System  (2003) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=62921", "_id": "62921", "title": "Scalable computing"}, {"url": "/showciting?cid=132260", "_id": "132260", "title": "et al. LogP: Towards a realistic model of parallel computation"}, {"url": "/showciting?cid=297270", "_id": "297270", "title": "Algorithmic skeletons: a structured approach to the management of parallel computation"}, {"url": "/showciting?cid=1551856", "_id": "1551856", "title": "et al.: Parallel programming using skeleton functions. PARLE\u201993"}, {"url": "/viewdoc/summary?cid=494717", "_id": "494717", "title": "A case for the PRAM as a standard programmer\u2019s model"}, {"url": "/showciting?cid=1597246", "_id": "1597246", "title": "Designing Practical Parallel Algorithms for Scalable Message Passing Machines"}], "abstart": "<p>. An approach, called SAT (Stages And Transformations), is introduced to support the derivation of parallel distributed-memory programs. During the design, a program is viewed as a single thread of stages, with parallelism concentrated within stages; the target program is of the SPMD format. The design process is based on the transformation rules of the Bird-Meertens formalism of higher-order functions over lists. The approach is illustrated by three case studies which include: a systematic method of constructing list homomorphisms, a scalable, load-balanced implementation of divide-and-conquer based on a specialized topology and a formal derivation of a time and cost optimal parallel algorithm for straightforward polynomial multiplication. 1 Introduction  The main problem with parallel and distributed systems today seems not to be how to build them, but how to make them work efficiently. The enormous diversity of architectures, together with the specific problems of parallelism, not e...</p>", "title": "Stages and Transformations in Parallel Programming  (1996) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=5882", "_id": "5882", "title": "Scale and performance in a distributed file system"}, {"url": "/viewdoc/summary?cid=25068", "_id": "25068", "title": "The ParaDyn parallel performance measurement tool"}, {"url": "/viewdoc/summary?cid=25260", "_id": "25260", "title": "A secure environment for untrusted helper applications"}, {"url": "/showciting?cid=154935", "_id": "154935", "title": "A new kernel foundation for UNIX de- velopment"}, {"url": "/viewdoc/summary?cid=67286", "_id": "67286", "title": "Vnodes: An Architecture for Multiple File System Types in Sun Unix"}, {"url": "/viewdoc/summary?cid=59139", "_id": "59139", "title": "The SDSC storage resource broker"}, {"url": "/viewdoc/summary?cid=6726", "_id": "6726", "title": "Scale and performance in the Denali isolation kernel"}, {"url": "/showciting?cid=108610", "_id": "108610", "title": "D.: Detours: Binary interception of Win32 functions"}, {"url": "/viewdoc/summary?cid=108611", "_id": "108611", "title": "Interposition agents: Transparently interposing user code at the system interface"}, {"url": "/viewdoc/summary?cid=15969", "_id": "15969", "title": "S.: Gass: a data movement and access service for wide area computing systems"}, {"url": "/viewdoc/summary?cid=108616", "_id": "108616", "title": "Supporting checkpointing and process migration outside the Unix kernel"}, {"url": "/viewdoc/summary?cid=89475", "_id": "89475", "title": "Traps and pitfalls: Practical problems in system call interposition based security tools"}, {"url": "/viewdoc/summary?cid=186433", "_id": "186433", "title": "Replica selection in the globus data grid"}, {"url": "/viewdoc/summary?cid=216466", "_id": "216466", "title": "Kangaroo Approach to Data Movement on the Grid"}, {"url": "/viewdoc/summary?cid=28247", "_id": "28247", "title": "Interposed request routing for scalable network storage"}, {"url": "/viewdoc/summary?cid=108615", "_id": "108615", "title": "A Comparison of OS Extension Technologies"}, {"url": "/showciting?cid=23415", "_id": "23415", "title": "Reliable network connections"}, {"url": "/viewdoc/summary?cid=108605", "_id": "108605", "title": "UFO: A personal global file system based on user-level extensions to the operating system"}, {"url": "/viewdoc/summary?cid=2981", "_id": "2981", "title": "Protocols and services for distributed data-intensive science"}, {"url": "/viewdoc/summary?cid=108617", "_id": "108617", "title": "Multiple Bypass: Interposition Agents for Distributed Computing"}, {"url": "/viewdoc/summary?cid=271638", "_id": "271638", "title": "Providing Resource Management Services to Parallel Applications"}, {"url": "/viewdoc/summary?cid=216464", "_id": "216464", "title": "Matchmaking Frameworks For Distributed Resource Management"}, {"url": "/viewdoc/summary?cid=174763", "_id": "174763", "title": "Pipeline and batch sharing in grid workloads"}, {"url": "/viewdoc/summary?cid=84092", "_id": "84092", "title": "Process hijacking"}, {"url": "/viewdoc/summary?cid=108607", "_id": "108607", "title": "M.: Flexibility, manageability, and performance in a grid storage appliance"}, {"url": "/viewdoc/summary?cid=108621", "_id": "108621", "title": "Grid-Based File Access: The Legion I/O Model"}, {"url": "/viewdoc/summary?cid=216460", "_id": "216460", "title": "Utilizing widely distributed computational resources efficiently with execution domains"}, {"url": "/showciting?cid=108608", "_id": "108608", "title": "UIO: A uniform I/O system interface for distributed systems"}, {"url": "/showciting?cid=1384627", "_id": "1384627", "title": "Error scope on a computational grid"}, {"url": "/showciting?cid=108609", "_id": "108609", "title": "dCache, a distributed storage data caching system"}, {"url": "/showciting?cid=216465", "_id": "216465", "title": "Grid Data Management Pilot"}, {"url": "/showciting?cid=2459106", "_id": "2459106", "title": "X; \u201cEstablishing Persistent Identity Using the Handle System\u201d; Tenth International World Wide Web Conference; Hong Kong, May 2001; http://www10.org/cdrom/posters/1136.pdf GS1: [Physical bar code identifiers current information] http://www.uc-council.org V"}, {"url": "/showciting?cid=108606", "_id": "108606", "title": "CASTOR project status"}, {"url": "/showciting?cid=108613", "_id": "108613", "title": "Protocol independence using the sockets API"}, {"url": "/viewdoc/summary?cid=108620", "_id": "108620", "title": "The discipline and method architecture for reusable libraries"}, {"url": "/showciting?cid=108612", "_id": "108612", "title": "SOCKS protocol version 5. Internet Engineering Task Force (IETF) Request for Comments (RFC"}, {"url": "/showciting?cid=108614", "_id": "108614", "title": "The Tool Daemon Protocol (TDP"}, {"url": "/showciting?cid=2459105", "_id": "2459105", "title": "A proposed solution to the problem of levels in errormessage generation"}], "abstart": "<p>Distributed computing continues to be an alphabet-soup of services and protocols for managing computation and storage. To live in this environment, applications require middleware that can transparently adapt standard interfaces to new distributed systems; such software is known as an interposition agent. In this paper, we present several lessons learned about interposition agents via a progressive study of design possibilities. Although performance is an important concern, we pay special attention to less tangible issues such as portability, reliability, and compatibility. We begin with a comparison of seven methods of interposition, focusing on one method, the debugger trap, that requires special techniques to achieve acceptable performance on popular operating systems. Using this method, we implement a complete interposition agent, Parrot, that splices existing remote I/O systems into the namespace of standard applications. The primary design problem of Parrot is the mapping of fixed application semantics into the semantics of the available I/O systems. We offer a detailed discussion of how errors and other unexpected conditions must be carefully managed in order to keep this mapping intact. We conclude with a evaluation of the performance of the I/O protocols employed by Parrot, and use an Andrew-like benchmark to demonstrate that semantic differences have consequences in performance. 1. </p>", "title": "Parrot: Transparent User-Level Middleware for Data Intensive Computing  (2003) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=9966", "_id": "9966", "title": "Cure: An Efficient Clustering Algorithm for Large Database"}, {"url": "/viewdoc/summary?cid=13065", "_id": "13065", "title": "An introduction to disk drive modeling"}, {"url": "/viewdoc/summary?cid=16903", "_id": "16903", "title": "Research Problems in Data Warehousing"}, {"url": "/viewdoc/summary?cid=47603", "_id": "47603", "title": "Parallel Mining of Association Rules"}, {"url": "/showciting?cid=193039", "_id": "193039", "title": "An Overview of Data Warehousing"}, {"url": "/viewdoc/summary?cid=154295", "_id": "154295", "title": "Scheduling algorithms for modern disk drives"}, {"url": "/viewdoc/summary?cid=159635", "_id": "159635", "title": "Active storage for large-scale data mining and multimedia"}, {"url": "/viewdoc/summary?cid=203373", "_id": "203373", "title": "A Case for Intelligent Disks (IDISKs"}, {"url": "/showciting?cid=221409", "_id": "221409", "title": "Effects of scheduling on file memory operations"}, {"url": "/viewdoc/summary?cid=70421", "_id": "70421", "title": "BIRCH: A New Data Clustering Algorithm and Its Applications. Data"}, {"url": "/viewdoc/summary?cid=1011267", "_id": "1011267", "title": "M.: Managing Memory to Meet Multiclass Workload Response Time Goals"}, {"url": "/viewdoc/summary?cid=187077", "_id": "187077", "title": "The DiskSim simulation environment version 1.0 reference manual"}, {"url": "/viewdoc/summary?cid=406202", "_id": "406202", "title": "Ratio rules: A new paradigm for fast, quantifiable data mining"}, {"url": "/showciting?cid=504476", "_id": "504476", "title": "et a!.: Resource Allocation and Scheduling for Mixed Database Workloads"}, {"url": "/showciting?cid=900574", "_id": "900574", "title": "What happens when processing, storage bandwidth are free and infinite?,\u201d Keynote speech at"}, {"url": "/viewdoc/summary?cid=2622418", "_id": "2622418", "title": "Taming the giants and the monsters: Mining large databasesfor nuggets of knowledge. Database Programming and Design"}, {"url": "/showciting?cid=1873099", "_id": "1873099", "title": "Performance evaluation of concurrent OLTP and DSS workloads in a single database system"}, {"url": "/showciting?cid=2703429", "_id": "2703429", "title": "New Open-Processor Platform Enables Cost-Effective, System-on-a-chip Solutions for Hard Disk Drives\u201d www.cirrus.com/3ci"}, {"url": "/showciting?cid=2703431", "_id": "2703431", "title": "Siemens Announced Availability of TriCore-1 For New Embedded System Designs\u201d News Release"}, {"url": "/showciting?cid=2703428", "_id": "2703428", "title": "Active Disks&quot; ASPLOS"}, {"url": "/showciting?cid=2703430", "_id": "2703430", "title": "Storage Networking: The Evolution of Information Management\u201d White Paper"}], "abstart": "<p>This paper proposes a scheme for scheduling disk requests that takes advantage of the ability of high-level functions to operate directly at individual disk drives. We show that such a scheme makes it possible to support a Data Mining workload on an OLTP system almost for free: there is only a small impact on the throughput and response time of the existing workload. Specifically, we show that an OLTP system has the disk resources to consistently provide one third of its sequential bandwidth to a background Data Mining task with close to zero impact on OLTP throughput and response time at high transaction loads. At low transaction loads, we show much lower impact than observed in previous work. This means that a production OLTP system can be used for Data Mining tasks without the expense of a second dedicated system. Our scheme takes advantage of close interaction with the on-disk scheduler by reading blocks for the Data Mining workload as the disk head \"passes over\" them while satisfy...</p>", "title": "Data Mining on an OLTP System (Nearly) for Free  (2000) "}
{"defpaper": [], "abstart": "<p>We present the Distributed Batch Controller (DBC), a system built to support batch processing of large scientific datasets. The DBC implements a federation of autonomous workstation pools, which may be widely-distributed. Individual batch jobs are executed using idle workstations in these pools. Input data are staged to the pool before processing begins. We describe the architecture and implementation of the DBC, and present the results of experiments in which it is used to perform image compression. 1 Introduction  In this paper we present the DBC (Distributed Batch Controller), a system that processes data using widely-distributed computational resources. The DBC was built as a tool for enriching scientific data stored in two mass storage systems at NASA's Goddard Space Flight Center (GSFC). Enriching data means processing it to make it more useful. For example, satellite images may be classified according to some domain-specific criteria. These classifications can then be stored as ...</p>", "title": "The DBC: Processing Scientific Data Over the Internet  (1996) "}
{"defpaper": [{"url": "/showciting?cid=600", "_id": "600", "title": "D.A.Patterson, Computer Architecture - A Quantitative Approach"}, {"url": "/showciting?cid=57822", "_id": "57822", "title": "Introduction to parallel algorithms and architectures: arrays, trees, hypercubes"}, {"url": "/showciting?cid=16220", "_id": "16220", "title": "A bridging model for parallel computation"}, {"url": "/showciting?cid=62920", "_id": "62920", "title": "An Introduction to Parallel Algorithms"}, {"url": "/showciting?cid=192597", "_id": "192597", "title": "Parallel algorithms for shared-memory machines"}, {"url": "/showciting?cid=62948", "_id": "62948", "title": "General purpose parallel architectures"}, {"url": "/showciting?cid=102493", "_id": "102493", "title": "to Emulate Shared Memory"}, {"url": "/showciting?cid=100012", "_id": "100012", "title": "Efficient Parallel Algorithms"}, {"url": "/showciting?cid=89769", "_id": "89769", "title": "The Design and Analysis of Parallel Algorithms"}, {"url": "/showciting?cid=100016", "_id": "100016", "title": "editor), Synthesis of Parallel Algorithms"}, {"url": "/showciting?cid=23894", "_id": "23894", "title": "Randomized and Deterministic Simulations of PRAMs by Parallel Machines with Restricted Granularity of Parallel Memories,\u201d Acta Informatica 21"}, {"url": "/showciting?cid=893675", "_id": "893675", "title": "Fortran 90 Explained"}, {"url": "/showciting?cid=277132", "_id": "277132", "title": "M.: A complexity theory of efficient parallel algorithms"}, {"url": "/viewdoc/summary?cid=375050", "_id": "375050", "title": "On-line algorithms for path selection in a nonblocking network"}, {"url": "/showciting?cid=75031", "_id": "75031", "title": "An O(logN) Deterministic Packet Routing Scheme. STOC"}, {"url": "/showciting?cid=1925540", "_id": "1925540", "title": "Parallel Hashing \u2013 An Efficient Implementation of Shared Memory"}, {"url": "/showciting?cid=79049", "_id": "79049", "title": "Methods for message routing in parallel machines"}, {"url": "/viewdoc/summary?cid=1400563", "_id": "1400563", "title": "Parallel algorithmic techniques for combinatorial computation"}, {"url": "/showciting?cid=1987427", "_id": "1987427", "title": "A parallel-design distributed-implementation (PDDI) general purpose computer"}, {"url": "/viewdoc/summary?cid=1225544", "_id": "1225544", "title": "Can parallel algorithms enhance serial implementation"}, {"url": "/showciting?cid=868488", "_id": "868488", "title": "Synchronous parallel computation: A survey"}, {"url": "/viewdoc/summary?cid=1640025", "_id": "1640025", "title": "Structural parallel algorithmics"}], "abstart": "<p>This position paper advocates that the PRAM model of parallel computation will be a standard (but not exclusive) programmer's model for computers whose hardware features various kinds of parallelism.</p>", "title": "A Case for the PRAM As a Standard Programmer's Model  (1992) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=19741", "_id": "19741", "title": "Random graphs"}, {"url": "/showciting?cid=33549", "_id": "33549", "title": "On computable numbers, with an application to the Entscheidungsproblem"}, {"url": "/showciting?cid=16220", "_id": "16220", "title": "A bridging model for parallel computation"}, {"url": "/showciting?cid=147975", "_id": "147975", "title": "PVM: Parallel Virtual Machine \u2013 A Users\u2019 Guide and Tutorial for Networked Parallel Computing"}, {"url": "/showciting?cid=62948", "_id": "62948", "title": "General purpose parallel architectures"}, {"url": "/showciting?cid=203619", "_id": "203619", "title": "I/O complexity: The red-blue pebble game"}, {"url": "/showciting?cid=216414", "_id": "216414", "title": "Communication complexity of PRAMs"}, {"url": "/viewdoc/summary?cid=75576", "_id": "75576", "title": "General purpose parallel computing"}, {"url": "/viewdoc/summary?cid=325783", "_id": "325783", "title": "Scientific computing on bulk synchronous parallel architectures"}, {"url": "/showciting?cid=1278086", "_id": "1278086", "title": "A library for Bulk Synchronous Parallel programming"}, {"url": "/viewdoc/summary?cid=1377442", "_id": "1377442", "title": "Empirical Evaluation of the CRAY-T3D: A Compiler Perspective"}, {"url": "/showciting?cid=105132", "_id": "105132", "title": "Efficient optical communication in parallel computers"}, {"url": "/viewdoc/summary?cid=62949", "_id": "62949", "title": "A combining mechanism for parallel computers"}, {"url": "/viewdoc/summary?cid=1377454", "_id": "1377454", "title": "E cient communication using total-exchange"}, {"url": "/showciting?cid=3226526", "_id": "3226526", "title": "A Fahmy, D C Stefanescu, and L G Valiant. Bulk synchronous parallel computing - a paradigm for transportable software"}, {"url": "/showciting?cid=1965770", "_id": "1965770", "title": "Sparse matrix vector multiplication on distributed architectures: Lower bound and average complexity results"}, {"url": "/showciting?cid=3409725", "_id": "3409725", "title": "Foundations of Parallel Programming, volume 6"}, {"url": "/showciting?cid=3409724", "_id": "3409724", "title": "A Dusseau"}], "abstart": "<p>. Scalable computing will, over the next few years, become the normal form of computing. In this paper we present a unified framework, based on the BSP model, which aims to serve as a foundation for this evolutionary development. A number of important techniques, tools and methodologies for the design of sequential algorithms and programs have been developed over the past few decades. In the transition from sequential to scalable computing we will find that new requirements such as universality and predictable performance will necessitate significant changes of emphasis in these areas. Programs for scalable computing, in addition to being fully portable, will have to be efficiently universal, offering high performance, in a predictable way, on any general purpose parallel architecture. The BSP model provides a discipline for the design of scalable programs of this kind. We outline the approach and discuss some of the issues involved. 1 Introduction  For fifty years, sequential computin...</p>", "title": "Scalable Computing  (1996) "}
{"defpaper": [{"url": "/viewdoc/summary?cid=36674", "_id": "36674", "title": "ATOM: A system for building customized program analysis tools"}, {"url": "/viewdoc/summary?cid=87730", "_id": "87730", "title": "U-Net: A user-level network interface for parallel and distributed computing"}, {"url": "/viewdoc/summary?cid=7835", "_id": "7835", "title": "A Fast File System for UNIX"}, {"url": "/showciting?cid=1762474", "_id": "1762474", "title": "Kerberos: an authentication service for computer networks"}, {"url": "/viewdoc/summary?cid=28251", "_id": "28251", "title": "Frangipani: A scalable distributed file system"}, {"url": "/viewdoc/summary?cid=159635", "_id": "159635", "title": "Active storage for large-scale data mining and multimedia"}, {"url": "/viewdoc/summary?cid=428034", "_id": "428034", "title": "Improving Security and Performance for Capability Systems"}, {"url": "/showciting?cid=1344491", "_id": "1344491", "title": "HYDRA: The Kernel of a Multiprocessor Operating"}, {"url": "/showciting?cid=3998816", "_id": "3998816", "title": "Using Sparse Capabilities"}], "abstart": "<p>(NASD) storage architecture, prototype implementations oj NASD drives, array management for our architecture, and three,filesystems built on our prototype. NASD provides scal-able storage bandwidth without the cost of servers used primarily,fijr trut&amp;rring data from peripheral networks (e.g. SCSI) to client networks (e.g. ethernet). Increasing datuset sizes, new attachment technologies, the convergence of peripheral and interprocessor switched networks, and the increased availability of on-drive transistors motivate and enable this new architecture. NASD is based on four main principles: direct transfer to clients, secure interfaces via cryptographic support, asynchronous non-critical-path oversight, and variably-sized data objects. Measurements of our prototype system show that these services can be cost-#ectively integrated into a next generation disk drive ASK. End-to-end measurements of our prototype drive andfilesys-terns suggest that NASD cun support conventional distrib-uted filesystems without per$ormance degradation. More importantly, we show scaluble bandwidth for NASD-special-ized filesystems. Using a parallel data mining application, NASD drives deliver u linear scaling of 6.2 MB/s per client-drive pair, tested with up to eight pairs in our lab.</p>", "title": "A cost-effective, high-bandwidth storage architecture  (1998) "}
{"defpaper": [], "abstart": "<p>The ideal distributed file system would provide all its users with coherent, shared access to the same set of files,yet would be arbitrarily scalable to provide more storage space and higher performance to a growing user community. It would be highly available in spite of component failures. It would require minimal human administration, and administration would not become more complex as more components were added. Frangipani is a new file system that approximates this ideal, yet was relatively easy to build because of its two-layer structure. The lower layer is Petal (described in an earlier paper), a distributed storage service that provides incrementally scalable, highly available, automatically managed virtual disks. In the upper layer, multiple machines run the same Frangipani file system code on top of a shared Petal virtual disk, using a distributed lock service to ensure coherence. Frangipaniis meant to run in a cluster of machines that are under a common administration and can communicate securely. Thus the machines trust one another and the shared virtual disk approach is practical. Of course, a Frangipani file system can be exported to untrusted machines using ordinary network file access protocols. We have implemented Frangipani on a collection of Alphas running DIGITAL Unix 4.0. Initial measurements indicate that Frangipani has excellent single-server performance and scales well as servers are added.  </p>", "title": " Frangipani: A Scalable Distributed File System "}
{"defpaper": [{"url": "/viewdoc/summary?cid=16313", "_id": "16313", "title": "Coda: A highly available file system for a distributed workstation environment"}, {"url": "/viewdoc/summary?cid=5887", "_id": "5887", "title": "Design and implementation of the Sun network file system"}, {"url": "/viewdoc/summary?cid=80831", "_id": "80831", "title": "Serverless network file systems"}, {"url": "/showciting?cid=9682", "_id": "9682", "title": "The Design of the UNIX Operating System"}, {"url": "/viewdoc/summary?cid=82553", "_id": "82553", "title": "The Sprite Network Operating System"}, {"url": "/viewdoc/summary?cid=46288", "_id": "46288", "title": "The Zebra Striped Network File System"}, {"url": "/showciting?cid=111137", "_id": "111137", "title": "Highly Available Distributed File Access"}, {"url": "/viewdoc/summary?cid=449903", "_id": "449903", "title": "I/O issues in a multimedia system"}, {"url": "/showciting?cid=277593", "_id": "277593", "title": "Disk System Architectures for High Performance Computing"}, {"url": "/viewdoc/summary?cid=525468", "_id": "525468", "title": "A Quantitative Analysis of Cache Policies for Scalable Network File Systems"}, {"url": "/showciting?cid=1488636", "_id": "1488636", "title": "The Magic Garden Explained: The"}, {"url": "/showciting?cid=548603", "_id": "548603", "title": "Scalable, secure, and highly available distributed file access"}, {"url": "/showciting?cid=758226", "_id": "758226", "title": "Interactive Scientific Visualization of Fluid Flow"}, {"url": "/showciting?cid=972981", "_id": "972981", "title": "Parallel Database Systems: the case for shared-something"}, {"url": "/showciting?cid=1787991", "_id": "1787991", "title": "Implementing a shared file system on a hippi disk array,\u201d Mass Storage Systems"}, {"url": "/showciting?cid=199852", "_id": "199852", "title": "Fibre Channel: a Connection to the Future"}, {"url": "/showciting?cid=2266528", "_id": "2266528", "title": "Unix Internals: The New Frontiers. Upper Saddle River, NJ 07458"}, {"url": "/showciting?cid=2266527", "_id": "2266527", "title": "Direct Attach Disk Profile (Private Loop"}, {"url": "/showciting?cid=8765951", "_id": "8765951", "title": "Implementing a Shared File System on a"}, {"url": "/showciting?cid=8765952", "_id": "8765952", "title": "The Magic Garden Explained, Englewood Cliffs,NJ 07632"}], "abstart": "<p>The Global File System (GFS) is a prototype design for a distributed file system in which cluster nodes physically share storage devices connected via a network like Fibre Channel. Networks and network attached storage devices have advanced to a level of performance and extensibility that the once believed disadvantages of \u201cshared disk \u201d architectures are no longer valid. This shared storage architecture attempts to exploit the sophistication of device technologies where as the client\u2013server architecture diminishes a device\u2019s role to a simple components. GFS distributes the file system responsibilities across the processing nodes, storage across the devices, and file system resources across the entire storage pool. GFS caches data on the storage devices instead of the main memories of the machines. Consistency is established by using a locking mechanism maintained by the storage device controllers to facilitate atomic read\u2013modify\u2013 write operations. The locking mechanism is being prototyped on Seagate disks drives and Ciprico disk arrays. GFS is implemented in the Silicon Graphics IRIX operating system and is accessed using standard Unix commands and utilities.</p>", "title": "The Global File System  (1996) "}
{"defpaper": [{"url": "/showciting?cid=4914", "_id": "4914", "title": "Concurrency Control and Recovery in Database Systems"}, {"url": "/viewdoc/summary?cid=4076", "_id": "4076", "title": "Multicast routing in datagram internetworks and extended LANs"}, {"url": "/viewdoc/summary?cid=5882", "_id": "5882", "title": "Scale and performance in a distributed file system"}, {"url": "/viewdoc/summary?cid=19138", "_id": "19138", "title": "Weighted voting for replicated data"}, {"url": "/viewdoc/summary?cid=16313", "_id": "16313", "title": "Coda: A highly available file system for a distributed workstation environment"}, {"url": "/viewdoc/summary?cid=5887", "_id": "5887", "title": "Design and implementation of the Sun network file system"}, {"url": "/viewdoc/summary?cid=75125", "_id": "75125", "title": "Exploiting virtual synchrony in distributed systems"}, {"url": "/viewdoc/summary?cid=115436", "_id": "115436", "title": "Caching in the Sprite network file system"}, {"url": "/viewdoc/summary?cid=67286", "_id": "67286", "title": "Vnodes: An Architecture for Multiple File System Types in Sun Unix"}, {"url": "/viewdoc/summary?cid=82560", "_id": "82560", "title": "The LOCUS distributed operating system"}, {"url": "/viewdoc/summary?cid=157049", "_id": "157049", "title": "Reimplementing the Cedar File System Using Logging and Group Commit"}, {"url": "/showciting?cid=69158", "_id": "69158", "title": "A principle for resilient sharing of distributed resources"}, {"url": "/showciting?cid=9102", "_id": "9102", "title": "A NonStop kernel"}, {"url": "/showciting?cid=115439", "_id": "115439", "title": "NFS: Network File System Protocol Specification"}, {"url": "/viewdoc/summary?cid=183426", "_id": "183426", "title": "Maintaining availability in partitioned replicated databases"}, {"url": "/viewdoc/summary?cid=293026", "_id": "293026", "title": "Voting with witnesses: A consistency scheme for replicated files"}, {"url": "/viewdoc/summary?cid=61583", "_id": "61583", "title": "Crash recovery in a distributed data storage system"}, {"url": "/viewdoc/summary?cid=19151", "_id": "19151", "title": "Viewstamped Replication: A New Primary Copy Method to Support Highly-Available Distributed Systems"}, {"url": "/viewdoc/summary?cid=525913", "_id": "525913", "title": "Network Time Protocol (version 1) specification and implementation. DARPA Network Working Group Report RFC-1059"}, {"url": "/viewdoc/summary?cid=111132", "_id": "111132", "title": "Supplying High Availability with a Standard Network File System"}, {"url": "/viewdoc/summary?cid=115435", "_id": "115435", "title": "An algorithm for data replication"}, {"url": "/showciting?cid=1160640", "_id": "1160640", "title": "A 'Nonstop' Operating System"}, {"url": "/showciting?cid=599111", "_id": "599111", "title": "Multicast Routing"}, {"url": "/viewdoc/summary?cid=1349904", "_id": "1349904", "title": "Distributed Logging for Transaction Processing"}, {"url": "/showciting?cid=69174", "_id": "69174", "title": "Viewstamped replication for highly available distributed systems"}, {"url": "/showciting?cid=1349900", "_id": "1349900", "title": "Information Storage in a Decentralized Computer System"}, {"url": "/showciting?cid=1349907", "_id": "1349907", "title": "NFSSTONE: A network file server performance benchmark"}, {"url": "/showciting?cid=216382", "_id": "216382", "title": "The Generic File System"}, {"url": "/showciting?cid=1349903", "_id": "1349903", "title": "Implicit Replication in a Network File Server"}, {"url": "/showciting?cid=5796831", "_id": "5796831", "title": "An Efficient Fault-tolerant Protocol for Replicated Data Management. 23. Mills, D.L. Network Time Protocol (Version 1"}, {"url": "/showciting?cid=1351468", "_id": "1351468", "title": "Vnodes: An Architecture for Multiple File"}, {"url": "/showciting?cid=1904319", "_id": "1904319", "title": "Maintaining Availability"}, {"url": "/showciting?cid=1349906", "_id": "1349906", "title": "Fail-Stop Processors. Digest of Papers from Spring CompCon \u201983"}, {"url": "/viewdoc/summary?cid=494375", "_id": "494375", "title": "Automatic Replication for Highly Available Services"}, {"url": "/showciting?cid=2557963", "_id": "2557963", "title": "A Principle for Resilient Shar"}, {"url": "/showciting?cid=2557964", "_id": "2557964", "title": "Implementation of the Ficus Repli- 627-644. Also available in unpublished form as CAC cated File System"}, {"url": "/showciting?cid=2557965", "_id": "2557965", "title": "Implicit and Performance in a Distributed File System&quot;. ACM Replication in a Network File Server"}, {"url": "/showciting?cid=2557966", "_id": "2557966", "title": "Exploiting Virtual and"}, {"url": "/showciting?cid=2557967", "_id": "2557967", "title": "Crash Recovery in nual Conference"}, {"url": "/showciting?cid=2557968", "_id": "2557968", "title": "An Algorithm for Datagram Internetworks and Extended LANs"}, {"url": "/showciting?cid=2557969", "_id": "2557969", "title": "Supplying High in Partitioned Replicated Databases. Proc. of the Fifth Availability with a Standard Network File System"}, {"url": "/showciting?cid=2557970", "_id": "2557970", "title": "Network Time Protocol (Version 1) Fault-tolerant Protocol for Replicated Data Management. Specification and Implementation. DARPA-Internet"}, {"url": "/showciting?cid=2557971", "_id": "2557971", "title": "Caching in 11. Ghemawat, S. Automatic Replication for Highly the Sprite Network File System"}, {"url": "/showciting?cid=1349905", "_id": "1349905", "title": "The Design and Implementation of a Log-Strucured File System"}, {"url": "/showciting?cid=9169486", "_id": "9169486", "title": "Reimplementing the Cedar File System"}, {"url": "/showciting?cid=9169487", "_id": "9169487", "title": "A \u2018NonStop\u2019 Operating System. Proc. of the Using Logging and Group Commit"}, {"url": "/showciting?cid=10327514", "_id": "10327514", "title": "A Principle for Resilient Shar- Corporation"}, {"url": "/showciting?cid=10327515", "_id": "10327515", "title": "System Types in Sun UNIX. USENIX Summer \u201986 ConDistributed Logging for Transaction Processing"}], "abstart": "<p> </p>", "title": "Replication in the Harp File System  (2003) "}
{"defpaper": [{"url": "/showciting?cid=14991", "_id": "14991", "title": "C4.5: Programs for Machine Learning"}, {"url": "/showciting?cid=19747", "_id": "19747", "title": "Pattern Classification and Scene Analysis"}, {"url": "/showciting?cid=1441", "_id": "1441", "title": "An Introduction to Modern Information Retrieval"}, {"url": "/viewdoc/summary?cid=25590", "_id": "25590", "title": "Fast algorithms for mining association rules"}, {"url": "/showciting?cid=10334", "_id": "10334", "title": "Principal Component Analysis"}, {"url": "/viewdoc/summary?cid=15382", "_id": "15382", "title": "Using linear algebra for intelligent information retrieval"}, {"url": "/viewdoc/summary?cid=3810", "_id": "3810", "title": "Beyond market baskets: generalizing association rules to correlations"}, {"url": "/viewdoc/summary?cid=327", "_id": "327", "title": "Discovery of multiple-level association rules from large databases"}, {"url": "/viewdoc/summary?cid=13551", "_id": "13551", "title": "S.: An Efficient Algorithm for Mining Association Rules in Large Databases"}, {"url": "/viewdoc/summary?cid=25446", "_id": "25446", "title": "Data mining: an overview from a database perspective"}, {"url": "/viewdoc/summary?cid=32984", "_id": "32984", "title": "Mining quantitative association rules in large relational tables"}, {"url": "/viewdoc/summary?cid=47603", "_id": "47603", "title": "Parallel Mining of Association Rules"}, {"url": "/showciting?cid=17238", "_id": "17238", "title": "Personalized information delivery: An analysis of information filtering methods"}, {"url": "/viewdoc/summary?cid=3809", "_id": "3809", "title": "What Makes Patterns Interesting in Knowledge Discovery Systems"}, {"url": "/showciting?cid=83982", "_id": "83982", "title": "An e ective hash based algorithm for mining association rules"}, {"url": "/viewdoc/summary?cid=147862", "_id": "147862", "title": "A linear method for deviation detection in large databases"}, {"url": "/showciting?cid=144498", "_id": "144498", "title": "2 nd edition"}, {"url": "/showciting?cid=1666280", "_id": "1666280", "title": "Extraction and Applications of Statistical Relationships in Relational Databases"}, {"url": "/showciting?cid=1666278", "_id": "1666278", "title": "Tomasz Imielinski, and Arun Swami. &quot;Database Mining: A Performance Perspective"}, {"url": "/showciting?cid=2705164", "_id": "2705164", "title": "Improving forward selection with background knowledge: Finding interesting multiple regression models for sales prediction"}, {"url": "/showciting?cid=1666279", "_id": "1666279", "title": "Tomasz Imielinski, and Arun Swami. &quot;Mining Association Rules between Sets of Items in Large Databases"}], "abstart": "<p>Association Rule Mining algorithms operate on a data matrix (e.g., customers \\Theta products) to derive association rules [2, 23]. We propose a new paradigm, namely, Ratio Rules,  which are quantifiable in that we can measure the \"goodness\" of a set of discovered rules. We propose to use the \"guessing error\" as a measure of the \"goodness\", that is, the rootmean -square error of the reconstructed values of the cells of the given matrix, when we pretend that they are unknown. Another contribution is a novel method to guess missing /hidden values from the Ratio Rules that our method derives. For example, if somebody bought $10 of milk and $3 of bread, our rules can \"guess\" the amount spent on, say, butter. Thus, we can perform a variety of important tasks such as forecasting, answering \"what-if\" scenarios, detecting outliers, and visualizing the data. Moreover, we show how to compute Ratio Rules in a single pass over the dataset with small memory requirements (a few small matrices), in co...</p>", "title": "Ratio Rules: A New Paradigm for Fast, Quantifiable Data Mining  (1998) "}
{"defpaper": [{"url": "/showciting?cid=16881", "_id": "16881", "title": "C.: Providing olap (on-line analytical processing) to user-analysts: An it mandate. In: White Paper"}, {"url": "/viewdoc/summary?cid=70421", "_id": "70421", "title": "BIRCH: A New Data Clustering Algorithm and Its Applications. Data"}, {"url": "/viewdoc/summary?cid=498710", "_id": "498710", "title": "Advanced scout: Data mining and knowledge discovery in nba data. Data Mining and Knowledge Discovery 1(1"}, {"url": "/showciting?cid=2344964", "_id": "2344964", "title": "The Evolution of Synthetic Aperture Radar Systems and their Progression to the EOS SAR"}, {"url": "/showciting?cid=888197", "_id": "888197", "title": "Mining Science Data"}, {"url": "/showciting?cid=888195", "_id": "888195", "title": "Industrial Applications of Data Mining and Knowledge Discovery"}], "abstart": "<p>enge. Consider a simple applications that determines if two rows in a data table are likely to be the same, given that it is acceptable for \"a few fields\" to differ. While this \"find-similar\" problem appears simple, and one could think of several ways to achieve it, executing it on a massive data store is far from straightforward. Large data stores are now a fact of life for most organizations.  A gigabyte is a quantity of information; it represents about 10  9  bytes of stored information. The word derives from the Latin giga, meaning \"giant.\" The next unit up is the terabyte, from the Greek teras, meaning \"monster\", represents 10  12  bytes. Quite appropriately, in certain database circles, the terabyte is also referred to as the \"terrorbyte\": a term I first heard used by Jim Gray.  The modern information revolution is creating huge data stores which, instead of offering in</p>", "title": "Taming the Giants and the Monsters: Mining Large Databases for Nuggets of Knowledge  (1998) "}
